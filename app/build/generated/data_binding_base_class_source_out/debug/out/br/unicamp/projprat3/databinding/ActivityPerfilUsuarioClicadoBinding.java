// Generated by view binder compiler. Do not edit!
package br.unicamp.projprat3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.unicamp.projprat3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPerfilUsuarioClicadoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnChamar;

  @NonNull
  public final EditText edtDescricao;

  @NonNull
  public final TextView tvArea;

  @NonNull
  public final TextView tvCidade;

  @NonNull
  public final TextView tvCpf;

  @NonNull
  public final TextView tvDescricao;

  @NonNull
  public final TextView tvEmail;

  @NonNull
  public final TextView tvNome;

  private ActivityPerfilUsuarioClicadoBinding(@NonNull RelativeLayout rootView,
      @NonNull Button btnChamar, @NonNull EditText edtDescricao, @NonNull TextView tvArea,
      @NonNull TextView tvCidade, @NonNull TextView tvCpf, @NonNull TextView tvDescricao,
      @NonNull TextView tvEmail, @NonNull TextView tvNome) {
    this.rootView = rootView;
    this.btnChamar = btnChamar;
    this.edtDescricao = edtDescricao;
    this.tvArea = tvArea;
    this.tvCidade = tvCidade;
    this.tvCpf = tvCpf;
    this.tvDescricao = tvDescricao;
    this.tvEmail = tvEmail;
    this.tvNome = tvNome;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPerfilUsuarioClicadoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPerfilUsuarioClicadoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_perfil_usuario_clicado, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPerfilUsuarioClicadoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnChamar;
      Button btnChamar = ViewBindings.findChildViewById(rootView, id);
      if (btnChamar == null) {
        break missingId;
      }

      id = R.id.edtDescricao;
      EditText edtDescricao = ViewBindings.findChildViewById(rootView, id);
      if (edtDescricao == null) {
        break missingId;
      }

      id = R.id.tvArea;
      TextView tvArea = ViewBindings.findChildViewById(rootView, id);
      if (tvArea == null) {
        break missingId;
      }

      id = R.id.tvCidade;
      TextView tvCidade = ViewBindings.findChildViewById(rootView, id);
      if (tvCidade == null) {
        break missingId;
      }

      id = R.id.tvCpf;
      TextView tvCpf = ViewBindings.findChildViewById(rootView, id);
      if (tvCpf == null) {
        break missingId;
      }

      id = R.id.tvDescricao;
      TextView tvDescricao = ViewBindings.findChildViewById(rootView, id);
      if (tvDescricao == null) {
        break missingId;
      }

      id = R.id.tvEmail;
      TextView tvEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvEmail == null) {
        break missingId;
      }

      id = R.id.tvNome;
      TextView tvNome = ViewBindings.findChildViewById(rootView, id);
      if (tvNome == null) {
        break missingId;
      }

      return new ActivityPerfilUsuarioClicadoBinding((RelativeLayout) rootView, btnChamar,
          edtDescricao, tvArea, tvCidade, tvCpf, tvDescricao, tvEmail, tvNome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
